spring.application.name=bff-service

# ==== Development Settings ====
spring.devtools.restart.enabled=false

# ==== Logging Configuration ====
logging.level.com.threedfly.bff=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ==== Database Configuration ====
spring.profiles.active=local

# ==== Local Profile (H2 Database) ====
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ==== Database Configuration ====
spring.datasource.url=jdbc:h2:mem:bffdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# ==== JPA / Hibernate ====
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# ==== Connection Pool Settings ====
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000

# ==== Server Configuration ====
server.port=8082

# ==== Actuator for Health Checks ====
management.endpoints.web.exposure.include=health,info,metrics,prometheus,circuitbreakers
management.endpoint.health.show-details=always
management.endpoint.circuitbreakers.enabled=true
management.metrics.export.prometheus.enabled=true

# ==== Circuit Breaker Configuration ====
resilience4j.circuitbreaker.instances.order-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.order-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.order-service.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.order-service.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.order-service.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.order-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.order-service.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.order-service.slow-call-duration-threshold=2s

resilience4j.circuitbreaker.instances.product-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.product-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.product-service.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.product-service.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.product-service.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.product-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.product-service.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.product-service.slow-call-duration-threshold=2s

# ==== Retry Configuration ====
resilience4j.retry.instances.order-service.max-attempts=3
resilience4j.retry.instances.order-service.wait-duration=1s
resilience4j.retry.instances.order-service.enable-exponential-backoff=true
resilience4j.retry.instances.order-service.exponential-backoff-multiplier=2

resilience4j.retry.instances.product-service.max-attempts=3
resilience4j.retry.instances.product-service.wait-duration=1s
resilience4j.retry.instances.product-service.enable-exponential-backoff=true
resilience4j.retry.instances.product-service.exponential-backoff-multiplier=2

# ==== Timeout Configuration ====
resilience4j.timelimiter.instances.order-service.timeout-duration=10s
resilience4j.timelimiter.instances.product-service.timeout-duration=10s

# ==== Microservices Configuration ====
# Order Service
services.order-service.base-url=${ORDER_SERVICE_URL:http://localhost:8080}
services.order-service.timeout=10s
services.order-service.retry.max-attempts=3

# Product Service  
services.product-service.base-url=${PRODUCT_SERVICE_URL:http://localhost:8081}
services.product-service.timeout=10s
services.product-service.retry.max-attempts=3

# API Keys and Authentication
services.api-key=${SERVICES_API_KEY:dev-api-key}

# ==== WebClient Configuration ====
spring.webflux.base-path=/api
webclient.connect-timeout=5s
webclient.read-timeout=30s
webclient.write-timeout=30s
webclient.response-timeout=30s

# ==== OpenAPI Documentation ====
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
